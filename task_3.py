"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


from collections import Counter
import operator
comp_dict = {
    'IBM': 20000,
    'Microsoft': 15000,
    'Intel': 18000,
    'AMD': 25000,
    'NVIDIA': 30000}

# 1 Сложность = O(nlog(n)); T(n) = 3n + nlog(n) + 1
good_dict = {}  # 1
list_d = list(comp_dict.items())  # n
list_d.sort(key=lambda i: i[1], reverse=True)  # nlog(n)
good_list = list_d[:3]  # n
for i in good_list:
    good_dict.update({i[0]: i[1]})  # n

print(good_dict)

# 2 Сложность = O(nlog(n));
new_dict = dict(
    sorted(
        comp_dict.items(),
        key=operator.itemgetter(1),
        reverse=True)[
            :3])  # nlog(n)
print(new_dict)

# 3 Сложность = O(n);
from collections import Counter
print(dict(Counter(comp_dict).most_common(3)))  # n ???

# Если я не ошибся, то предпочтительнее третий вариант, он быстрее всего.
# Вообще непонятно, как работают функции "под капотом"...
